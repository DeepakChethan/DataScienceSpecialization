fivenum(mtcars$wt)
summary(mtcars$wt)
max(mtcars$wt)
boxplot(mtcars$mpg~mtcars$hp)
?with
with(mtcars, summary(wt))
with(subset(mtcars, gear==4),plot(mpg,hp))
swirl()
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
install_from_swirl("Exploratory Data Analysis")
swirl()
pollution.head()
head(pollution)
dim(pollution)
with(pollution,summary(pm25))
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col="blue")
abline(h=12)
hist(ppm,col="green")
rug(ppm)
low
high
hist(ppm,col="green", breaks = 100)
rug(ppm)
hist(ppm,col="green")
abline(v=12)
abline(v=12,lwd=2)
abline(median(ppm),col="magenta",lwd = 4)
abline(v=median(ppm),col="magenta",lwd = 4)
names(pollution)
table(pollution$region)
reg <- table(pollution$region)
reg
barplot(reg)
barplot(reg, col="wheat", main="Number of countries in Each Region")
barplot(reg, col="wheat", main="Number of Countries in Each Region")
barplot(reg, col="wheat", main="Number of Counties in Each Region")
boxplot(pm25~region,pollution)
boxplot(pm25~region,pollution,col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- subset(pollution,region=="east")
head(east)
hist(east$pm25,col="green")
west <- subset(pollution,region=="west")
hist(subset(pollution,region=="west")$pm25,col="green")
with(plot(pollution$latitude,pollution$pm25))
with(pollution,plot(latitude,pm25))
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude,ppm,col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow=c(1,2),mar=c(5,4,2,1))
west <- subset(pollution,region=="west")
plot(west$latitude,west$pm25,main="West")
plot(east$latitude,east$pm25,main="East")
swirl()
?Devices
with(faithful,plot(eruptions,waiting))
title("Old Failthful Geyser data")
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
getwd()
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.copy(png,"geyserplot.png")
dev.copy(png,file="geyserplot.png")
dev.off()
head(cars)
with(cars,plot(speed,dist))
text(mean(car$speed),max(cars$dist),"SWIRL rules!")
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp~Income | region,state,c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ,hwy,data = mpg)
swirl()
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
class(airquality$Month)
boxplot(Ozone~Month, airquality)
bye
bye()
swirl()
library(swirl)
swirl()
boxplot(Ozone~Month, airquality, xlab="Month",ylab="Ozone (ppb)", col.axis="blue",col.lab="red")
title(main="Ozone and Wind in New York City")
with(airquality,plot(Wind,Ozone))
abline(lm(Ozone~Wind),lwd=3)
abline(with(airquality,lm(Ozone~Wind),lwd=3))
title(main="Ozone and Wind in New York City")
par()
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind,airquality$Ozone,set="n")
plot(airquality$Wind,airquality$Ozone,type="n")
title(main="Wind and Ozone in NYC")
head(airquality)
may <-subset(airquality, Month==5)
points(may$Ozone~may$Wind,col="blue",pch="3")
points(may$Ozone~may$Wind,col="blue",pch=3)
points(may$Ozone~may$Wind,col="blue",pch=17)
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <-subset(airquality, Month!=5)
points(notmay$Wind,notmay$Ozone,col="blue",pch=13)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright",c(17,9),c("blue","red"),c("May","Other Months"))
legend("topright",c(17,9),c("blue","red"),labe("May","Other Months"))
legend()
legend("topright")
legend("topright",c(17,9),c("blue","red"))
legend("topright",pch=c(17,9),col=c("blue","red"),legend = c("May","Other Months"))
legend("topright",pch=c(17,8),col=c("blue","red"),legend = c("May","Other Months"))
abline(line(median(airquality$wind),lty=2,lwd=2))
abline(line(median(airquality$wind)),lty=2,lwd=2)
line(median(airquality$Wind))
?line
abline(h=median(airquality$wind),lty=2,lwd=2)
abline(v=median(airquality$wind),lty=2,lwd=2)
abline(v=median(airquality$wind),lty=2,lwd=2)
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main="Ozone and Solar Radiation")
par(mfrow=c(1,3),mar=c(4,4,2,1),oma=c(0,0,2,0))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone~airquality$Solar.R,main="Ozone and Solar Radiation")
plot(airquality$Solar.R,airquality$Ozone,main="Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main="Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer=T)
mtext("Ozone and Weather in New York City", outer=TRUE)
library(swirl)
swirl()
xyplot(Ozone~Wind, data=airquality)
xyplot(Ozone~Wind, data=airquality, pch=8, col="red",main="Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month),data=airquality)
xyplot(Ozone~Wind | as.factor(Month),data=airquality, layout=c(5,1))
xyplot(Ozone~Wind | Month,data=airquality, layout=c(5,1))
p <- xyplot(Ozone~Wind,data=airquality)
print(p)
names(p)
mynames[myfull]
p$formula
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout=c(2,1))
v1
v2
myedit("plot1.R")
library(swirl)
swirl()
pathtofile(fileName = "plot1.R", local=TRUE)
structure(pathtofile)
pathtofile(fileName = "plot1.R")
source(pathtofile("plot1.R"),local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"),local=TRUE)
play()
x
y
xyplot(x,y)
xyplot(y~x)
lmline(y~x)
f
xyplot(y~x| f, panel = function(x,y,...){})
xyplot(y~x| f, panel = function(x,y,...){ panel.xyplot(y~x);})
xyplot(y~x| f, panel = function(x,y,...){ panel.xyplot(x,y,...);})
xyplot(y~x| f, panel = function(x,y,...){ panel.xyplot(x,y,...); panel.abline(x,y,col=2)})
xyplot(y~x| f, panel = function(x,y,...){ panel.xyplot(x,y,...); panel.lmline(x,y,col=2)})
next()
nxt()
str(diamonds)
table(diamons$color)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"),local=TRUE)
xyplot(price~carat | color*cut, data = diamonds, strip = strip = FALSE, pch = 20, xlab="myxlab", ylab="myylab", main = "mymain")
xyplot(price~carat | color*cut, data = diamond, strip = FALSE, pch = 20, xlab="myxlab", ylab="myylab", main = "mymain")
xyplot(price~carat | color*cut, data = diamonds, strip = FALSE, pch = 20, xlab="myxlab", ylab="myylab", main = "mymain")
xyplot(price~carat| color*cut, data=diamonds,strip=FALSE, pch=20,xlab=myxlab, ylab=myylab,main=mymain)
xyplot(price~carat | color*cut, data = diamonds, pch = 20, xlab="myxlab", ylab="myylab", main = "mymain")
xyplot(price~carat| color*cut, data=diamonds, pch=20,xlab=myxlab, ylab=myylab,main=mymain)
swirl()
colors()
sample(colors(),10)
pal <- colorRa''
pal <- colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
?man
str(add)
sum(2,3)
str(sum)
library(datasets)
?datasets
library(help="datasets")
titaic <- data("Titanic")
View(titanic)
titanic <- Titanic
class(titanic)
library(dplyr)
titanic <- tbl_df(titanic)
str(titanic)
summary(titanic)
summary(Titanic)
fivenum(Titanic)
View(titanic)
head(titanic)
tail(titanic)
?Titanic
table(titanic$Survived)
prop.table(table(titanic$Survived))
plot(table(tintanic$Survived))
plot(table(titanic$Survived))
barplot(table(titanic$Survived))
table(titanic)
with(titanic,class(Age))
mutate(titanic,Age=as.factor(Age))
class(Age)
str(tapply(vector, index, function))
str(tapply)
args(tapply)
temp <- 1:20
temp
args(seq)
str(seq)
seq(1,20)
seq(1,20,3)
seq(1,20,3,3)
class(seq(120))
class(seq(1,20))
1:20
20:1
20:-1
-1:20
-1:-20
-(1)
a <- c(1,2,3,4,5)
class(a)
a <- c(1,2,3,4,5)
b <- vector(1,2,3,4,5)
b <- vector(1:20)
b <- vector(mode="numeric",length = 10L)
class(b)
b
b[1] <-2
b
a <- list()
class(a)
a[[1]]<- "dope"
a[[2]] <- 20
a
a$1
x <- list(1,2,3,4,"T")
x
x <- list(a="a",b="b",c=209)
x
x$c
a <- matrix(1,2,3,4,nrow = 2,ncol = 2)
a <- matrix(1:4,nrow = 2,ncol = 2)
b <- matrix(seq(1,4),nrow=2,ncol=2)
b
a
dim(a)
attributes(a)
dim(x)
attributes(x)
length(x)
fac <- factor(c("male","female"))
fac\
fac
length(fac)
levels(fac)
df <- data.frame(a=1:4,b=5:8)
dim(df)
df
df$a
dimnames(df)
names(df)
names(df)
class(df)
sapply(df,class)
if(T)
print(paste(
"hello","deepak"
))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
for (a in df) {
print(a)
}
seq_along(df)
df
seq_len(df)
?seq_along
seq_len(29)
seq(1,29)
while(z>=3 && z <= 10){}
z<-5
while(z>=3 && z <= 10){}
while(z>=3 && z <= 10){}
while(z>=3 && z <= 10){print(z); count<- count+1}
while(z>=3 && z <= 10){print(z); z<- z+1}
next()
?next
POSIXlt
sys.time()
Sys.time()
as.POSIXlt(Sys.time())
?apply
View(titanic)
remove(titaic)
titanic$n <- as.numeric(titanic$n)
colclasses(n)
colclasses(titanic)
class(titanic$n)
any(is.na(titanic$n))
sum(titanic$n)
apply(titanic,1,sum)
class(titanic$Sex)
titanic$Sex <- as.factor(titanic$Sex)
tapply(titanic,titanic$Sex,length)
tapply(titanic,titanic$Sex)
split(titanic,titanic$Sex)
?simulate
?simulation
?rnorm
?rpois
?Geometric
?Uniform
punif(1:20)
punif(1)
punif(2)
punif(3)
punif(min=0,max=20,q = 50)
punif(min=0,max=20,q = c(50,50))
ls
ls()
remove(west)
View(x)
table(titanic$Sex)
table(titanic$Age)
class(titanic)
boxplot(titanic$Sex)
boxplot(table(titanic$Sex))
boxplot(titanic$n)
library(help="datasets")
data("AirPassengers")
ap <- tbl_df(AirPassengers)
remove(AirPassengers)
View(ap)
str(ap)
View(InsectSprays)
table(InsectSprays$spray)
boxplot(InsectSprays)
boxplot(split(InsectSprays,InsectSprays$spray)
)
library(lattice)
xyplot(InsectSprays)
xyplot(count,spray,data=InsectSprays)
xyplot(InsectSprays$count)
xyplot(InsectSprays$count,InsectSprays$spray)
function
source('~/.active-rstudio-document', echo=TRUE)
power(2,2)
2^10
k<- 180/(1+(0.9^(-favs))
}
source('~/.active-rstudio-document', echo=TRUE)
a(10)
source('~/.active-rstudio-document', echo=TRUE)
a(10)
a(1)
a(2)
a(3)
a(100)
source('~/.active-rstudio-document', echo=TRUE)
a(100)
a(1000)
print(sum)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
2939/24
k<- 180/(1+(0.90^(-favs)))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
print(a(100000))
print(a(100))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
k<- 30/(1+(0.9^(-favs)))
k
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
max(sapply(1:200000,log))
log(0)
log(50)
log(-56)
log(36)
log(34)
1/log(1)
1/log(3)
1/log(1000)
1/log(10214098200)
1/log(34)
26*60*(log(1000000)+1)
26*60
source('~/.active-rstudio-document', echo=TRUE)
setwd("~/Git/DataScienceSpecialization/ExploratoryAnalysis/ExData_Plotting1/")
source('~/Git/DataScienceSpecialization/ExploratoryAnalysis/plot1.R', echo=TRUE)
list.files()
dev.off()
NEI[, Emissions := lapply(.SD, as.numeric), .SDcols = c("Emissions")]
totalNEI <- NEI[, lapply(.SD, sum, na.rm = TRUE), .SDcols = c("Emissions"), by = year]
png(filename='plot1.png')
barplot(totalNEI[, Emissions]
, names = totalNEI[, year]
, xlab = "Years", ylab = "Emissions"
, main = "Emissions over the Years")
dev.off()
source('~/Git/DataScienceSpecialization/ExploratoryAnalysis/plot1.R', echo=TRUE)
plot1
plot1()
source('~/Git/DataScienceSpecialization/ExploratoryAnalysis/plot1.R', echo=TRUE)
plot1()
png(filename = "plot1.png")
dev.off()
source('~/Git/DataScienceSpecialization/ExploratoryAnalysis/plot1.R', echo=TRUE)
plot1()
plot1<- function() {
NEI[, Emissions := lapply(.SD, as.numeric), .SDcols = c("Emissions")]
totalNEI <- NEI[, lapply(.SD, sum, na.rm = TRUE), .SDcols = c("Emissions"), by = year]
png(filename='plot1.png')
barplot(totalNEI[, Emissions]
, names = totalNEI[, year]
, xlab = "Years", ylab = "Emissions"
, main = "Emissions over the Years")
dev.off()
}
plot1()
source('~/Git/DataScienceSpecialization/ExploratoryAnalysis/plot1.R', echo=TRUE)
plot1()
source('~/Git/DataScienceSpecialization/ExploratoryAnalysis/plot1.R', echo=TRUE)
dev.off()
plot1<- function() {
NEI[, Emissions := lapply(.SD, as.numeric), .SDcols = c("Emissions")]
totalNEI <- NEI[, lapply(.SD, sum, na.rm = TRUE), .SDcols = c("Emissions"), by = year]
png(filename='plot1.png')
barplot(totalNEI[, Emissions]
, names = totalNEI[, year]
, xlab = "Years", ylab = "Emissions"
, main = "Emissions over the Years")
dev.off()
}
source('~/Git/DataScienceSpecialization/ExploratoryAnalysis/plot1.R', echo=TRUE)
list.files()
getwd
getwd()
setwd("..")
getwd()
source('~/Git/DataScienceSpecialization/ExploratoryAnalysis/plot1.R', echo=TRUE)
plot1()
list.files()
source('~/Git/DataScienceSpecialization/ExploratoryAnalysis/plot2.R', echo=TRUE)
source('~/Git/DataScienceSpecialization/ExploratoryAnalysis/plot3.R', echo=TRUE)
source('~/Git/DataScienceSpecialization/ExploratoryAnalysis/plot3.R', echo=TRUE)
source('~/Git/DataScienceSpecialization/ExploratoryAnalysis/plot4.R', echo=TRUE)
source('~/Git/DataScienceSpecialization/ExploratoryAnalysis/plot5.R', echo=TRUE)
source('~/Git/DataScienceSpecialization/ExploratoryAnalysis/plot6.R', echo=TRUE)
